openapi: 3.0.3
info:
  title: Foodie OpenAPI
  version: 1.0.0

servers:
  - url: http://localhost:4000/api/v0

paths:
  /categories:
    get:
      summary: Get a category by ID
      responses:
        '200':
          description: Found category
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: string
        '400':
          description: Category not found
  /categories/items/{categoryId}:
    get:
      summary: Get items by categoryId
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Found items
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: string
        '404':
          description: Category not found
  /login:
    post:
      summary: Login a user
      tags:
        - Auth
      requestBody:
        description: Email and password
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: anna@books.com
                password:
                  type: string
                  example: annaadmin
      responses:
        '200':
          description: Successful login, returns access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Bearer token
        '401':
          description: Invalid email or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login/google:
    get:
      summary: Start Google OAuth login flow
      tags:
        - Auth
      responses:
        '200':
          description: Returns URL for Google sign-in
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: Google OAuth URL to redirect the user
                    example: https://accounts.google.com/o/oauth2/v2/auth?client_id=...

        '400':
          description: Failed to generate Google login URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user:
    get:
      summary: Get current authenticated user
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      last_sign_in_at:
                        type: string
        '401':
          description: Unauthorized or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: Unauthorized